

export interface Player {
  id: string; // uuid
  name: string;
  email?: string;
  age?: number;
  avatar_url?: string;
  team: 'D1' | 'D2' | 'Autre';
  position?: 'Gardien' | 'Défenseur' | 'Ailier' | 'Pivot' | 'unspecified' | '';
  preferred_foot?: 'Droit' | 'Gauche' | 'Ambidextre' | 'unspecified' | '';
  goals?: number;
  fouls?: number;
  player_number?: number;
  status?: 'Actif' | 'Blessé' | 'Suspendu' | 'Inactif';
  points?: number; // Added for player gamification
}

export interface PlayerPosition extends Player {
  position: { x: number; y: number };
  // Kept for backward compatibility with existing avatar fallbacks, but avatar_url should be used
  avatar?: string;
}

export type Role = 'coach' | 'player';


export interface PlayerAvailability {
  playerId: string;
  status: 'available' | 'unavailable' | 'undecided';
}

export interface MatchPoll {
  status: 'inactive' | 'active' | 'closed';
  deadline: string | null; // ISO string for the poll deadline
  availabilities: PlayerAvailability[];
}

export interface MatchDetails {
  opponent: string;
  opponentId?: string; // uuid of the opponent from the opponents table
  date: string;
  time: string;
  location: string;
  remarks: string;
  matchType: '20min' | '25min' | 'training';
  venue: 'home' | 'away';
  competition?: string; // e.g. 'd1', 'coupe_de_france'
  matchday?: number; // e.g. 1, 2, 3 for league matches
  jerseyWasherPlayerId?: string; // uuid of the player assigned to wash jerseys
  poll: MatchPoll; // Poll is now nested within details
}

export interface Scoreboard {
  homeScore: number;
  awayScore: number;
  homeFouls: number;
  awayFouls: number;
  time: number; // in seconds
  isRunning: boolean;
  period: number;
  timerLastStarted: string | null; // ISO string
}


// This interface now matches the Supabase table structure
export interface Match {
  id: string; // uuid, generated by Supabase
  created_at: string; // timestamptz, generated by Supabase
  details: MatchDetails;
  team: PlayerPosition[];
  substitutes: PlayerPosition[];
  scoreboard: Scoreboard;
  opponent_logo_url?: string; // Optional field from join
}

export interface Opponent {
    id: string; // uuid
    team_name: string;
    club_name?: string;
    logo_url?: string;
    championship?: string;
    coach_name?: string;
    coach_email?: string;
    coach_phone?: string;
    address?: string;
    created_at: string;
}

// Corresponds to the new 'trainings' table
export interface Training {
  id: string; // uuid
  created_at: string; // timestamptz
  title: string;
  description?: string;
  date: string; // date
  time: string; // time
  location?: string;
  poll: MatchPoll; // jsonb
}

export interface Ranking {
  rank: number;
  teamId: string;
  teamName: string;
  logoUrl?: string;
  played: number;
  wins: number;
  draws: number;
  losses: number;
  goalsFor: number;
  goalsAgainst: number;
  goalDifference: number;
  points: number;
}
