export interface Player {
  id: string; // uuid
  name: string;
  email?: string;
  age?: number;
  avatar_url?: string;
  team: 'D1' | 'D2' | 'Autre';
  position?: 'Goalkeeper' | 'Defender' | 'Winger' | 'Pivot';
  preferred_foot?: 'Right' | 'Left' | 'Both';
  goals: number;
  fouls: number;
}

export interface PlayerPosition extends Player {
  position: { x: number; y: number };
  // Kept for backward compatibility with existing avatar fallbacks, but avatar_url should be used
  avatar?: string;
}

export type Role = 'coach' | 'player';

export interface MatchDetails {
  opponent: string;
  date: string;
  time: string;
  location: string;
  remarks: string;
  matchType: '20min' | '25min';
}

export interface Scoreboard {
  homeScore: number;
  awayScore: number;
  homeFouls: number;
  awayFouls: number;
  time: number; // in seconds
  isRunning: boolean;
  period: number;
  timerLastStarted: string | null; // ISO string
}

// This interface now matches the Supabase table structure
export interface Match {
  id: string; // uuid, generated by Supabase
  created_at: string; // timestamptz, generated by Supabase
  details: MatchDetails;
  team: PlayerPosition[];
  substitutes: PlayerPosition[];
  scoreboard: Scoreboard;
}
